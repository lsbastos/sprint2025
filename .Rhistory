aux3$MC$macrocode = data.train3.macro.k$macroregional_geocode[1]
list.train.3[[k]]$out <- aux3
cat(k, data.train3.macro.k$uf[1] , data.train3.macro.k$macroregional_geocode[1], "\n")
}
df.train.3 <- list.train.3 %>% map(function(x) x$out$MC) %>% bind_rows()
dt_train3 = tibble( date = unique(dengue$date[dengue$target_3==T])) %>%
mutate(week = week.season(date))
saveRDS(df.train.3, file = "~/Desktop/sprint2025_train3.rds")
saveRDS(df.train.3, file = "forecasts/samples/sprint2025_train3.rds")
tbl.total.uf.train3 <- df.train.3 %>%
group_by(uf, samples) %>%
summarise(
values = sum(values)
) %>% group_by(uf) %>%
summarise(
pred = median(values),
lower_95 =  quantile(values, probs = 0.025),
lower_90 =  quantile(values, probs = 0.05),
lower_80 = quantile(values, probs = 0.10),
lower_50 =  quantile(values, probs = 0.25),
upper_50 =  quantile(values, probs = 0.75),
upper_80 = quantile(values, probs = 0.9),
upper_90 =  quantile(values, probs = 0.95),
upper_95 = quantile(values, probs = 0.975),
) %>% left_join(
dengue %>%
filter(target_3 == T) %>%
group_by(uf) %>%
summarise(cases = sum(casos)), by = "uf"
) #%>%
tbl.total.uf.week.train3 <- df.train.3 %>%
group_by(uf, week, samples) %>%
summarise(
values = sum(values)
) %>% group_by(uf, week) %>%
summarise(
pred = median(values),
lower_95 =  quantile(values, probs = 0.025),
lower_90 =  quantile(values, probs = 0.05),
lower_80 = quantile(values, probs = 0.10),
lower_50 =  quantile(values, probs = 0.25),
upper_50 =  quantile(values, probs = 0.75),
upper_80 = quantile(values, probs = 0.9),
upper_90 =  quantile(values, probs = 0.95),
upper_95 = quantile(values, probs = 0.975),
) %>% left_join(
dengue %>%
filter(target_3 == T) %>%
mutate(
week = week.season(date)
) %>%
group_by(uf, week) %>%
summarise(cases = sum(casos)), by = c("uf", "week")
) %>%
left_join(dt_train3)
write_csv(tbl.total.uf.week.train3, file = "~/Desktop/tbl.sprint.uf.week.train3.csv")
write_csv(tbl.total.uf.week.train3, file = "forecasts/tbl.sprint.uf.week.train3.csv")
tbl.total.uf.train3 %>%
ggplot(aes(y = uf)) +
geom_pointrange(aes(x = pred, xmin = lower_95, xmax = upper_95, color = "Estimates")) +
geom_point(aes(x = cases, color = "Observed")) +
scale_x_log10() +
theme_bw() +
labs(
x = "Cases",
y = "UF",
color = "",
title = "Training 3: 2024-2025 season"
)
View(tbl.total.uf.week.train3)
tbl.total.uf.week.train1 <- read_csv(, file = "forecasts/tbl.sprint.uf.week.train1.csv")
View(tbl.total.uf.week.train1)
tbl.total.uf.week.train2 <- read_csv(file = "forecasts/tbl.sprint.uf.week.train2.csv")
tbl.total.uf.week.train3  <- read_csv(file = "forecasts/tbl.sprint.uf.week.train3.csv")
tbl.total.uf.week.train1 |>
ggplot(aes(x = date, y = cases)) +
geom_line()
tbl.total.uf.week.train1 |>
filter(uf == "MG") |>
ggplot(aes(x = date, y = cases)) +
geom_line()
tbl.total.uf.week.train1 |>
filter(uf == "MG") |>
ggplot(aes(x = date, y = cases)) +
geom_line() +
theme_bw()
tbl.total.uf.week.train1 |>
filter(uf == "MG") |>
ggplot(aes(x = date)) +
geom_ribbon(aes(ymin = lower_80, ymax = upper_80), aes = 0.5) +
geom_line(aes(y = pred)) +
theme_bw()
tbl.total.uf.week.train1 |>
filter(uf == "MG") |>
ggplot(aes(x = date)) +
geom_ribbon(aes(ymin = lower_80, ymax = upper_80), alpha = 0.5) +
geom_line(aes(y = pred)) +
theme_bw()
tbl.total.uf.week.train1 |>
filter(uf == "MG") |>
ggplot(aes(x = date)) +
geom_ribbon(aes(ymin = lower_80, ymax = upper_80), alpha = 0.25) +
geom_line(aes(y = pred)) +
geom_line(aes(y = pred)) +
theme_bw()
tbl.total.uf.week.train1 |>
filter(uf == "MG") |>
ggplot(aes(x = date)) +
geom_ribbon(aes(ymin = lower_80, ymax = upper_80), alpha = 0.25) +
geom_line(aes(y = pred, color = "Prediction")) +
geom_line(aes(y = cases, , color = "Observed")) +
theme_bw()
tbl.total.uf.week.train1 |>
filter(uf == "MG") |>
ggplot(aes(x = date)) +
geom_ribbon(aes(ymin = lower_80, ymax = upper_80), alpha = 0.25) +
geom_line(aes(y = pred, color = "Predicted")) +
geom_line(aes(y = cases, , color = "Observed")) +
theme_bw()
tbl.total.uf.week.train1 |>
filter(uf == "MG") |>
ggplot(aes(x = date)) +
geom_ribbon(aes(ymin = lower_80, ymax = upper_80, fill = "Predicted"), alpha = 0.25) +
geom_line(aes(y = pred, color = "Predicted")) +
geom_line(aes(y = cases, , color = "Observed")) +
theme_bw()
tbl.total.uf.week.train3 |>
filter(uf == "MG") |>
ggplot(aes(x = date)) +
geom_ribbon(aes(ymin = lower_80, ymax = upper_80, fill = "Predicted"), alpha = 0.25) +
geom_line(aes(y = pred, color = "Predicted")) +
geom_line(aes(y = cases, , color = "Observed")) +
theme_bw()
View(tbl.total.uf.week.train3)
tibble(
Date = max(data.train3.macro.k$Date) + 7*(1:(40-22))
)
max(tbl.total.uf.week.train3$date)
max(tbl.total.uf.week.train3$date, na.rm = T)
tibble(
Date = max(tbl.total.uf.week.train3$date, na.rm = T) + 7*(1:(40-22))
)
tibble(
Date = max(tbl.total.uf.week.train3$date, na.rm = T) + 7*(1:(40-22))
) |>
mutate(
week = epiweek(Date)
)
View(tbl.total.uf.week.train1)
View(tbl.total.uf.week.train3)
tibble(
Date = max(tbl.total.uf.week.train3$date, na.rm = T) + 7*(1:(40-22)),
week = 35:52
)
View(tbl.total.uf.week.train3)
tbl.total.uf.week.train3  <- read_csv(file = "forecasts/tbl.sprint.uf.week.train3.csv") |>
left_join(y = tibble(
date.rm = max(tbl.total.uf.week.train3$date, na.rm = T) + 7*(1:(40-22)),
week = 35:52
),
by = week
) |> mutate(
date = ifelse(is.na(date), date.rm, date)
)
tbl.total.uf.week.train3  <- read_csv(file = "forecasts/tbl.sprint.uf.week.train3.csv") |>
left_join(tibble(
date.rm = max(tbl.total.uf.week.train3$date, na.rm = T) + 7*(1:(40-22)),
week = 35:52
),
by = week
) |> mutate(
date = ifelse(is.na(date), date.rm, date)
)
tbl.total.uf.week.train3  <- read_csv(file = "forecasts/tbl.sprint.uf.week.train3.csv")
tbl.total.uf.week.train3 |>
left_join(tibble(
date.rm = max(tbl.total.uf.week.train3$date, na.rm = T) + 7*(1:(40-22)),
week = 35:52),
by = week) |> view()
tbl.total.uf.week.train3 |>
left_join(tibble(
date.rm = max(tbl.total.uf.week.train3$date, na.rm = T) + 7*(1:(40-22)),
week = 35:52),
by = "week") |> mutate(
date = ifelse(is.na(date), date.rm, date)
) |> View()
tbl.total.uf.week.train3 |>
left_join(tibble(
date.rm = max(tbl.total.uf.week.train3$date, na.rm = T) + 7*(1:(40-22)),
week = 35:52),
by = "week") |> mutate(
date = if_else(is.na(date), date.rm, date)
) |> View()
tbl.total.uf.week.train3  <- read_csv(file = "forecasts/tbl.sprint.uf.week.train3.csv") |>
left_join(tibble(
date.rm = max(tbl.total.uf.week.train3$date, na.rm = T) + 7*(1:(40-22)),
week = 35:52),
by = "week") |> mutate(
date = if_else(is.na(date), date.rm, date)
) |> select(-date.rm)
View(tbl.total.uf.week.train3)
tbl.total.uf.week.train1 |>
filter(uf == "MG") |>
ggplot(aes(x = date)) +
geom_ribbon(aes(ymin = lower_80, ymax = upper_80, fill = "Predicted"), alpha = 0.25) +
geom_line(aes(y = pred, color = "Predicted")) +
geom_line(aes(y = cases, , color = "Observed")) +
theme_bw()
tbl.total.uf.week.train3 |>
filter(uf == "MG") |>
ggplot(aes(x = date)) +
geom_ribbon(aes(ymin = lower_80, ymax = upper_80, fill = "Predicted"), alpha = 0.25) +
geom_line(aes(y = pred, color = "Predicted")) +
geom_line(aes(y = cases, , color = "Observed")) +
theme_bw()
tbl.total.uf.week.train2 |>
filter(uf == "MG") |>
ggplot(aes(x = date)) +
geom_ribbon(aes(ymin = lower_80, ymax = upper_80, fill = "Predicted"), alpha = 0.25) +
geom_line(aes(y = pred, color = "Predicted")) +
geom_line(aes(y = cases, , color = "Observed")) +
theme_bw()
tbl.total.uf.week.train3 |>
filter(uf == "MG") |>
ggplot(aes(x = date)) +
geom_ribbon(aes(ymin = lower_80, ymax = upper_80, fill = "Predicted"), alpha = 0.25) +
geom_line(aes(y = pred, color = "Predicted")) +
geom_line(aes(y = cases, , color = "Observed")) +
theme_bw()
tbl.total.uf.week.train1 |>
filter(uf == "MG") |>
ggplot(aes(x = date)) +
geom_ribbon(aes(ymin = lower_80, ymax = upper_80), alpha = 0.25) +
geom_line(aes(y = pred, color = "Predicted")) +
geom_line(aes(y = cases, , color = "Observed")) +
theme_bw()
tbl.total.uf.week.train2 |>
filter(uf == "MG") |>
ggplot(aes(x = date)) +
geom_ribbon(aes(ymin = lower_80, ymax = upper_80), alpha = 0.25) +
geom_line(aes(y = pred, color = "Predicted")) +
geom_line(aes(y = cases, , color = "Observed")) +
theme_bw()
tbl.total.uf.week.train3 |>
filter(uf == "MG") |>
ggplot(aes(x = date)) +
geom_ribbon(aes(ymin = lower_80, ymax = upper_80), alpha = 0.25) +
geom_line(aes(y = pred, color = "Predicted")) +
geom_line(aes(y = cases, , color = "Observed")) +
theme_bw()
tbl.total.uf.week.train3 |>
filter(uf == "MG") |>
ggplot(aes(x = date)) +
geom_ribbon(aes(ymin = lower_80, ymax = upper_80), alpha = 0.25) +
geom_line(aes(y = pred, color = "Predicted")) +
geom_line(aes(y = cases, , color = "Observed")) +
theme_bw()
library(tidyverse)
library(INLA)
source("code/sprint_fun.R")
selufs <- sort(unique(dengue$uf))
dengue <- read_csv("data/dengue.csv.gz")
selufs <- sort(unique(dengue$uf))
dengue <- dengue %>%
filter(uf %in% selufs)
dengue.tbl <- dengue %>%
group_by(uf, macroregional_geocode) %>% tally() %>%
group_by(uf) %>%
mutate( n = n())
# For reproducibility purposes
set.seed(42)
macros <- unique(dengue$macroregional_geocode)
list.forecast = vector(mode = "list", length = length(macros))
names(list.forecast) = macros
k = 1
View(dengue)
data.train.macro.k = dengue %>%
filter(
macroregional_geocode == macros[k]
) %>%
group_by(Date = date, macroregional_geocode, uf) %>%
summarise(
cases = sum(casos),
train = TRUE, target = FALSE, .groups = "drop"
)
View(data.train.macro.k)
season(today())
season(today() + 7*(1:10))
season(today() + 7*7)
week.season(today() + 7*7)
today() + 7*7
week.season("2025-10-05")
week.season(ymd("2025-10-05"))
tibble(
Date = ymd("2025-10-05") + 7*(1:(40-22)),
macroregional_geocode = data.train3.macro.k$macroregional_geocode[1],
uf = data.train3.macro.k$uf[1],
cases = NA,
train = FALSE,
target = TRUE) |> view()
tibble(
Date = ymd("2025-10-05") + 7*(1:(40-22)),
macroregional_geocode = data.train.macro.k$macroregional_geocode[1],
uf = data.train3.macro.k$uf[1],
cases = NA,
train = FALSE,
target = TRUE) |> view()
tibble(
Date = ymd("2025-10-05") + 7*(1:(40-22)),
macroregional_geocode = data.train.macro.k$macroregional_geocode[1],
uf = data.train.macro.k$uf[1],
cases = NA,
train = FALSE,
target = TRUE) |> view()
tibble(
Date = ymd("2025-10-05") + 7*(0:52),
macroregional_geocode = data.train.macro.k$macroregional_geocode[1],
uf = data.train.macro.k$uf[1],
cases = NA,
train = FALSE,
target = TRUE) |> view()
tibble(
Date = ymd("2025-10-05") + 7*(0:52),
macroregional_geocode = data.train.macro.k$macroregional_geocode[1],
uf = data.train.macro.k$uf[1],
cases = NA,
train = FALSE,
target = TRUE) |> mutate(a = season())|> view()
tibble(
Date = ymd("2025-10-05") + 7*(0:52),
macroregional_geocode = data.train.macro.k$macroregional_geocode[1],
uf = data.train.macro.k$uf[1],
cases = NA,
train = FALSE,
target = TRUE) |> mutate(a = season(Date))|> view()
tibble(
Date = ymd("2025-10-05") + 7*(0:52),
macroregional_geocode = data.train.macro.k$macroregional_geocode[1],
uf = data.train.macro.k$uf[1],
cases = NA,
train = FALSE,
target = TRUE) |> mutate(a = week.season(Date))|> view()
data.train.macro.k = data.train.macro.k |>
bind_rows(
tibble(
Date = ymd("2025-10-05") + 7*(0:52),
macroregional_geocode = data.train.macro.k$macroregional_geocode[1],
uf = data.train.macro.k$uf[1],
cases = NA,
train = FALSE,
target = TRUE)
)
View(data.train.macro.k)
# Forescasting target 3
aux <- forecasting.inla(dados = data.train.macro.k %>%
filter(Date >= "2015-10-11"),
MC =T)
data.train.macro.k$uf[1]
data.train.macro.k$macroregional_geocode[1]
data.train.macro.k$uf[1]
data.train.macro.k$macroregional_geocode[1]
cat(k, data.train.macro.k$uf[1] ,
data.train.macro.k$macroregional_geocode[1], "\n")
aux$pred$uf = data.train.macro.k$uf[1]
aux$pred$macrocode = data.train.macro.k$macroregional_geocode[1]
aux$MC$uf = data.train.macro.k$uf[1]
aux$MC$macrocode = data.train.macro.k$macroregional_geocode[1]
list.forecast[[k]]$out <- aux
list.forecast[[k]]$out
# For replicability purposes
set.seed(42)
macros <- unique(dengue$macroregional_geocode)
list.forecast = vector(mode = "list", length = length(macros))
names(list.forecast) = macros
#k = 1
for(k in 1:length(macros)){
data.train.macro.k = dengue %>%
filter(
macroregional_geocode == macros[k]
) %>%
group_by(Date = date, macroregional_geocode, uf) %>%
summarise(
cases = sum(casos),
train = TRUE, target = FALSE, .groups = "drop"
)
data.train.macro.k = data.train.macro.k |>
bind_rows(
tibble(
Date = ymd("2025-10-05") + 7*(0:52),
macroregional_geocode = data.train.macro.k$macroregional_geocode[1],
uf = data.train.macro.k$uf[1],
cases = NA,
train = FALSE,
target = TRUE)
)
# Forescasting target 3
aux <- forecasting.inla(dados = data.train.macro.k %>%
filter(Date >= "2015-10-11"),
MC =T)
aux$pred$uf = data.train.macro.k$uf[1]
aux$pred$macrocode = data.train.macro.k$macroregional_geocode[1]
aux$MC$uf = data.train.macro.k$uf[1]
aux$MC$macrocode = data.train.macro.k$macroregional_geocode[1]
list.forecast[[k]]$out <- aux
cat(k, data.train.macro.k$uf[1] ,
data.train.macro.k$macroregional_geocode[1], "\n")
}
df.forecast <- list.forecast %>% map(function(x) x$out$MC) %>% bind_rows()
View(df.forecast)
df.forecast %>%
group_by(samples) %>%
summarise(
values = sum(values)
) %>% #group_by(uf) %>%
summarise(
pred = median(values),
lower_95 =  quantile(values, probs = 0.025),
lower_90 =  quantile(values, probs = 0.05),
lower_80 = quantile(values, probs = 0.10),
lower_50 =  quantile(values, probs = 0.25),
upper_50 =  quantile(values, probs = 0.75),
upper_80 = quantile(values, probs = 0.9),
upper_90 =  quantile(values, probs = 0.95),
upper_95 = quantile(values, probs = 0.975),                                      )
)
saveRDS(df.forecast, file = "~/Desktop/sprint2025_forecast.rds")
tbl.total.uf.forecast <- df.forecast %>%
group_by(uf, samples) %>%
summarise(
values = sum(values)
) %>% group_by(uf) %>%
summarise(
pred = median(values),
lower_95 =  quantile(values, probs = 0.025),
lower_90 =  quantile(values, probs = 0.05),
lower_80 = quantile(values, probs = 0.10),
lower_50 =  quantile(values, probs = 0.25),
upper_50 =  quantile(values, probs = 0.75),
upper_80 = quantile(values, probs = 0.9),
upper_90 =  quantile(values, probs = 0.95),
upper_95 = quantile(values, probs = 0.975),
) %>%
bind_rows(
tibble(uf = "BR") %>% bind_cols(df.forecast %>%
group_by(samples) %>%
summarise(
values = sum(values)
) %>% #group_by(uf) %>%
summarise(
pred = median(values),
lower_95 =  quantile(values, probs = 0.025),
lower_90 =  quantile(values, probs = 0.05),
lower_80 = quantile(values, probs = 0.10),
lower_50 =  quantile(values, probs = 0.25),
upper_50 =  quantile(values, probs = 0.75),
upper_80 = quantile(values, probs = 0.9),
upper_90 =  quantile(values, probs = 0.95),
upper_95 = quantile(values, probs = 0.975),                                      )
)
)
View(tbl.total.uf.forecast)
df.forecast %>%
group_by(week, samples) %>%
summarise(
values = sum(values)
) %>% group_by(week) %>%
summarise(
est = median(values),
li = quantile(values, probs = 0.05),
lu = quantile(values, probs = 0.95),
)
tbl.uf.week.forecast <- df.forecast %>%
group_by(uf, week, samples) %>%
summarise(
values = sum(values)
) %>% group_by(uf, week) %>%
summarise(
pred = median(values),
lower_95 =  quantile(values, probs = 0.025),
lower_90 =  quantile(values, probs = 0.05),
lower_80 = quantile(values, probs = 0.10),
lower_50 =  quantile(values, probs = 0.25),
upper_50 =  quantile(values, probs = 0.75),
upper_80 = quantile(values, probs = 0.9),
upper_90 =  quantile(values, probs = 0.95),
upper_95 = quantile(values, probs = 0.975),
) %>%
bind_rows(
tibble(uf = "BR") %>%
bind_cols(df.forecast %>%
group_by(week, samples) %>%
summarise(
values = sum(values)
) %>% group_by(week) %>%
summarise(
pred = median(values),
lower_95 =  quantile(values, probs = 0.025),
lower_90 =  quantile(values, probs = 0.05),
lower_80 = quantile(values, probs = 0.10),
lower_50 =  quantile(values, probs = 0.25),
upper_50 =  quantile(values, probs = 0.75),
upper_80 = quantile(values, probs = 0.9),
upper_90 =  quantile(values, probs = 0.95),
upper_95 = quantile(values, probs = 0.975),
)
)
)
View(tbl.uf.week.forecast)
View(tbl.uf.week.forecast)
View(tbl.total.uf.forecast)
View(tbl.total.uf.forecast)
write_csv(tbl.total.uf.forecast, file = "~/Desktop/tbl.sprint.uf.week.forecast.csv")
